import { proto } from "@whiskeysockets/baileys";
import { IBotData } from "./Interface/IBotData";
export declare const getBotData: (socket: any, webMessage: proto.IWebMessageInfo) => IBotData;
export declare const getCommand: (commandName: string) => any;
export declare const extractDataFromWebMessage: (message: proto.IWebMessageInfo) => {
    userJid: string | undefined;
    remoteJid: string;
    messageText: string;
    isReply: boolean;
    replyJid: string;
    replyText: string;
    isAudio: boolean;
    isImage: boolean;
    isSticker: boolean;
    isVideo: boolean;
    isDocument: boolean;
    mentionedJid: string;
    owner: boolean;
    webMessage: proto.IWebMessageInfo;
};
export declare const extractCommandAndArgs: (message: string) => {
    command: string;
    args: string;
};
export declare const isCommand: (message: string) => boolean;
export declare const getRandomName: (extension?: string) => string;
export declare const downloadImage: (webMessage: proto.IWebMessageInfo, fileName: string, folder?: string | null, ...subFolders: string[]) => Promise<string | null>;
export declare const downloadVideo: (webMessage: proto.IWebMessageInfo, fileName: string, folder?: string | null, ...subFolders: string[]) => Promise<string | null>;
export declare const downloadSticker: (webMessage: proto.IWebMessageInfo, fileName: string, folder?: string | null, ...subFolders: string[]) => Promise<string | null>;
export declare const isSuperAdmin: (botData: IBotData) => Promise<any>;
export declare const isAdmin: (botData: IBotData) => Promise<any>;
export declare const validate: (type: string, { remoteJid, socket, userJid }: IBotData) => Promise<any>;
export declare const onlyNumbers: (text: string) => string;
