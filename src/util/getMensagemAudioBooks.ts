import { LoginTituloType } from "../type/login";

interface MensagemParams {
    nome?: string;
    dias?: string;
}

const getHeaderMessage = (loginType: LoginTituloType): string => {
    switch (loginType) {
        case LoginTituloType.teste:
            return "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n            ‚úÖ *TESTE CRIADO* ‚úÖ\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨";
        case LoginTituloType.login:
            return "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n         ‚úÖ *DETALHES LOGIN* ‚úÖ\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨";
        case LoginTituloType.renovacao:
            return "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n         üì∫üåü *MOVNOW* üåüüì∫ \n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n\n";
        default:
            return "";
    }
};

const getFooterMessage = (loginType: LoginTituloType): string => {
    if (loginType === LoginTituloType.teste) {
        return "üòç GOSTOU? DIGITE #PIX PARA ATIVAR";
    }
    return "";
};

export const getMensagemAudioBooks = (username: string, password: string, vencimento: Date, loginType: LoginTituloType): string => {
    let msg = getHeaderMessage(loginType);

    const options = { timeZone: 'America/Sao_Paulo', hour12: false };

    if (loginType === LoginTituloType.renovacao) {
        msg += `Login *${username}* renovado com sucesso!\nNovo vencimento: ${vencimento.toLocaleString('pt-br', options)}`;
    } else {
        msg += `
        \nüíª *Servidor* : ${process.env.URL_AUDIOBOOKS_WEB}     
        \nüë§ *USUARIO:* ${username} 
        \nüîê *SENHA:* ${password} 
        \n‚è∞ *Expira:* ${new Date(vencimento).toLocaleDateString('pt-br', options)} 
        \n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨
        \nAplicativo Android: https://play.google.com/store/apps/details?id=com.audiobookshelf.app
        \nAplicativo IOS: https://testflight.apple.com/join/wiic7QIW
        \n${getFooterMessage(loginType)}
        `;
    }
    return msg.trim(); // Remove espa√ßos em branco no in√≠cio e no final da string
};
